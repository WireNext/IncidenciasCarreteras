name: Build and Fetch DGT Data

on:
  push:
    branches:
      - main
  workflow_dispatch:
  schedule:
    - cron: '*/15 * * * *'  # Ejecutar cada 15 minutos

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Java 17 (using Temurin distribution)
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Verify Maven installation
        run: mvn --version  # Verifica que Maven está correctamente instalado

      - name: Build with Maven
        run: mvn clean install  # Compila el proyecto y genera el archivo GeoJSON en la raíz

      - name: List files in the root directory
        run: ls -la  # Verifica si el archivo GeoJSON está en la raíz

      - name: Configure git for commit
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Check if GeoJSON file is detected by Git
        run: |
          git status  # Verifica si el archivo GeoJSON está siendo detectado como cambiado

      - name: Pull latest changes
        run: git pull origin main  # Asegúrate de que tu rama esté actualizada

      - name: Commit GeoJSON file if updated
        run: |
          git add incidencias.geojson  # Añade el archivo GeoJSON desde la raíz
          git diff --cached --quiet || git commit -m "Update GeoJSON file"  # Solo hace commit si hay cambios
          git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }} HEAD:main  # Usa el GITHUB_TOKEN para autenticar el push

      - name: Upload GeoJSON as artifact
        uses: actions/upload-artifact@v3
        with:
          name: incidencias-geojson
          path: incidencias.geojson  # El archivo GeoJSON está en la raíz
